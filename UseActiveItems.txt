void * EntityPlayer::UseActiveItem(EntityPlayer * player, ...){
	...

	switch(item_id){
		...
		case 406:{
			//D8

			player.D8_DamageMul=rng.NextDouble()
			player.D8_MoveSpeedMul=rng.NextDouble()
			player.D8_RangeMul=rng.NextDouble()
			player.D8_TearsMul=rng.NextDouble()

			for(int i=0;i<5;i++){
				sum = player->D8_MoveSpeedMul + player.D8_DamageMul + player->D8_RangeMul + player->D8_TearsMul
				base = (2.0 - sum) * 0.25

				player->D8_DamageMul = min(1, max(0, base + player->D8_DamageMul))
				player->D8_MoveSpeedMul = min(1, max(0, base + player->D8_MoveSpeedMul))
				player->D8_RangeMul = min(1, max(0, base + player->D8_RangeMul))
				player->D8_TearsMul = min(1, max(0, base + player->D8_TearsMul))
			}

			player->D8_DamageMul 		+= max(0.5, player->D8_DamageMul)
			player->D8_MoveSpeedMul 	+= max(0.5, player->D8_MoveSpeedMul)
			player->D8_RangeMul 	+= max(0.5, player->D8_RangeMul)
			player->D8_TearsMul 	+= max(0.5, player->D8_TearsMul)

			player->CacheFlags |= 
				CacheFlag.CACHE_DAMAGE | CacheFlag.CACHE_FIREDELAY |
				CacheFlag.CACHE_RANGE | CacheFlag.CACHE_SPEED
			player->EvaluateItems()
			if(HasCollectible(584)){
				//美德之书
				...
			}
			break
		}

		case 481:
		{
			if(player->?????? == 0){
				// player->somelist是一个嵌入在player中的数组

				first_property = player->some_list[0]
				seconed_property = player->some_list[1]

				shuffleList(player->some_list + 5, player->some_list, rng)

				*first_property += 1
				*seconed_property -= 1
				player->EvaluateItems()

				TemproryEffect::AddCollectibleEffect(481,1,1)
			}
			TemproryEffect::AddCollectibleEffect(481,1,1)
			TemproryEffect::AddCollectibleEffect(481,1,1)
			break
		}
		...
	}
	...
}


int * shuffleList(int *end, int *begin, RNG *rng){
	int len = end - begin
	for(int i=len-1;i>0;i--){
		int target = rng:NextInt(i)
		int temp = begin[i]
		begin[i] = begin[target]
		begin[target] = temp
	}
	return begin
}