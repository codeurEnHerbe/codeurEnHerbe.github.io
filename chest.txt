//GenerateChestDropList
if(variant != 53 || (stage_id == 11 && !IsGreedOrGreddier) ||  chest_is_first_open /* maybe */ || RandInt(4) != 0){
    //label 57
    switch(variant){
        case 56:
            // dont care
            List = new List
            List.Add(0,2)
            List.Add(1,10) //意思是值为1，权重为10
            List.Add(2,10)
            result = List.SelectRandom()
            count = RandInt(2) + 2
            if(result == 0 && RandInt(3) == 0){
                //492
                if(HasTrinket(45) && RandInt(2) == 0){
                    spawn(5,300,0)      
                }else{
                    if(HasTrinket(44) && RandInt(2) == 0){
                        spawn(5,70,0)
                    }
                }
                if(HasTrinket(42)){
                    count++
                }
            }
            LABEL 86
            if(HasCollectible(199)){
                count *= 2
            }
            if(HasTrinket(76)){
                count *= RandInt(2) != 0 ? 0 : 2
            }
            result = List.SelectRandom()
            if(result == 0){
                spawn(5,100,ItemPool:GetCollectible(29))
            }else if(result == 1){
                for(int i=0;i<count;i++){
                    spawn(5,300,0)
                }
            }else if(result == 2){
                for(int i=0;i<count;i++){
                    spawn(5,70,0)
                }
            }
            //553
            if(count == 0){
                spawn(18,0,0)
            }
            return;
        case 360:
            //dk
            if((stage_id == 11 && !IsGreedOrGreddier) && current_room_id == init_room_id){
                spawn(5,100,ItemPool::GetCollectible(3))
                return
            }
            List = new List
            List.Add(0,10)
            if(current_room_id != devil_room_id()){ //devil_room_id函数中使用了RNG，猜测可能影响恶魔/天使房
                List.Add(1,5)
            }
            List.Add(2,13)
            List.Add(3,13)
            List.Add(4,7)
            List.Add(5,7)
            List.Add(6,HasTrinket(22)? 3 : 15)
            List.Add(7,15)
            List.Add(8,15)
            switch(List.SelectRandom()){
                case 0:
                    spawn(5,100,ItemPool::GetCollectible(9))
                    break
                case 1:
                    //运行发现，去了恶魔房
                    ...
                    break
                case 2:
                    spawn(85,0,0)
                    spawn(85,0,0)
                    break
                case 3:
                    spawn(4,4,0)
                    break
                case 4:
                    spawn(3,43,0)
                    spawn(3,43,0)
                    spawn(3,43,0)
                    break
                case 5:
                    spawn(3,73,0)
                    spawn(3,73,0)
                    spawn(3,73,0)
                    break
                case 6:
                    spawn(5,10,3)
                    if(
                        RandInt(2) == 0 && (!HasTrinket(22) || RandInt(5) == 0)
                    ){
                        spawn(5,10,3)
                    }
                    break
                case 7:
                    spawn(5,40,3)
                    spawn(5,40,3)
                    break
                case 8:
                    spawn(5,70,0)
                    spawn(5,70,0)
                    break
                default:
                    break
            }
            return     
        case 390:
            if(!achievement_unlocked(415) && 未知逻辑A){
                spawn(5,100,580)
            }else{
                spawn(5,100,ItemPool::GetCollectible(15))
            }
            return
        case 55:
            List = new List
            List.Add(0,HasTrinket(22) ? 9 : 43)
            List.Add(1,42)
            List.Add(2,10)
            List.Add(3,5)
            switch(List.SelectRandom()){
                case 0:
                    for(int i=0;i<RandInt(3)+1;i++){
                        spawn(5,10,3)
                    }
                break
                case 1:
                    for(int i=0;i<3;i++){
                        spawn(5,350,0)
                    }
                break
                case 2:
                    spawn(5,100,ItemPool::GetCollectible(27))
                break
                case 3:
                    spawn(5,100,ItemPool::GetCollectible(4))
                break
            }
            return
        case 69:
            //dk
            List = new List
            if(SubType == 2){
                List.Add(40,15)             // spawn 5.40.0
                List.Add(0x6000A,10)        // spawn 5.10.6
                List.Add(0xB000A,5)         // spawn 5.10.11
                List.Add(70,15)             // spawn 5.70.0
            }else{
                List.Add(40,15)
                List.Add(30,20)
                List.Add(20,15)
                List.Add(90,4)
                List.Add(300,4)
            }
            count = RandInt(2) + 2
            for(int i=0;i<count;i++){
                random_item = List.SelectRandom()
                //0x6000A和0xB000A的计算结果见上面的spawn注释
                s_variant = random_item & 0xFFFF
                s_subtype = (random_item >> 16) & 0xFFFF
                spawn(5,s_variant, s_subtype)

                if(SubType == 2 && s_subtype == 10){
                    List.Add(0x6000A,-10)
                    List.Add(0xB000A,-5)
                }
            }
            return
    }
    if(
        (stage_id == 11 && !IsGreedOrGreddier) ||
        variant == 57 && RandInt(2) == 0
    ){
        spawn(5,100,ItemPool::GetCollectible(0))
        if(variant == 0x57){
            spawn(5,100,ItemPool:GetCollectible(0))
        }
        return
    }
    List = new List
    if((variant == 60 || variant == 51 || variant == 53 || variant == 57) && HasTrinket(159)){
        List.Add(7,80)
        if(variant != 57){
            List.Add(6,20)
        }else{
            // do nothing
        }
    }else{
        List.Add(0,10)
        if(variant != 57){
            List.Add(1,1)
            List.Add(2,1)
            if(variant == 60 || variant == 51 || variant == 53 || variant == 57){
                List.Add(5,10)
                if(variant != 57){
                    List.Add(6,20)
                }
                List.Add(3,58)
            }else{
                List.Add(4,10)
                List.Add(3,78)
            }
        }
    }
    Label 182:
    count = variant == 57 ? 5 : 1
    for(int i=0;i<count;i++){
        selected = List.SelectRandom()
        switch(selected){
            case 0:
                spawn(5,350,0)
                break
            case 1:
                spawn(5,50,0)
                break
            case 2:
                spawn(5,60,0)
                break
            case 3:
            case 7:
                sub_count = RandInt((variant == 60 || variant == 51 || variant == 53 || variant == 57) ? 7 : 4)
                if(sub_count < 2){
                    sub_count = 2
                }
                if(RandInt(3) != 0){
                    //929
                    if(HasTrinket(45) && RandInt(2) == 0){
                        spawn(5,300,0)
                    }else if(HasTrinket(44) && RandInt(2) == 0){
                        spawn(5,70,0)
                    }else if(HasTrinket(41) && RandInt(2) == 0){
                        spawn(5,40,0)
                    }else if(HasTrinket(34) && RandInt(2) != 0 &&
                        !(HasTrinket(22) && RandInt(5）!= 0))
                    ){
                        spawn(5,10,0)
                    }else if(HasTrinket(36) && RandInt(2) == 0){
                        spawn(5,30,0)
                    }
                    //label 209
                    if(HasTrinket(42)){
                        sub_count++
                    }
                }
                if(HasCollectible(199)){
                    sub_count *= 2
                }
                if(HasTrinket(76)){
                    if(RandInt(2) != 0){
                        spawn(18,0,0)
                        sub_count = 0
                    }else{
                        sub_count *= 2
                    }
                }
                SubList = new List
                if(selected == 7){
                    SubList.Add(0,25)
                    SubList.Add(1, HasTrinket(22) ? 4 : 20)
                    SubList.Add(2,10)
                    SubList.Add(3,20)
                    SubList.Add(4,5)
                    SubList.Add(5,5)
                    SubList.Add(6,5)
                    SubList.Add(7,5)
                    SubList.Add(8,5)
                }else{
                    SubList.Add(0,35)
                    SubList.Add(1,HasTrinket(22) ? 4:20)
                    SubList.Add(2,15)
                    SubList.Add(3,30)
                }
                for(int j=0;j<sub_count;j++){
                    switch(SubList.SelectRandom()){
                        case 0:
                            for(int i=0;i<RandInt(3)+1;i++){
                                spawn(5,20,0)
                            }
                            break
                        case 1:
                            spawn(5,10,0)
                            break
                        case 2:
                            spawn(5,30,0)
                            break
                        case 3:
                            spawn(5,40,0)
                            break
                        case 4:
                            spawn(5,70,0)
                            break
                        case 5:
                            spawn(5,300,0)
                            break
                        case 6:
                            x = ItemPool:GetCard(seed = RandInt(),playing = 0,rune = 1, onlyrune = 1) //select a rune x
                            spawn(5,300,x)
                            break
                        case 7:
                            spawn(5,350,0)
                            break
                        case 8:
                            spawn(5,90,0)
                            break
                    }
                }
                break
            case 4:
                spawn(5,70,0)
                break
            case 5:
                spawn(5,300,0)
                break
            case 6:
                spawn(5,100,ItemPool:GetCollectible(8))
                break
            default:
                break
        }
    }
    return
}
return